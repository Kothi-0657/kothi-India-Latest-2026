{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/booking",
      "regex": "^/booking(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/booking(?:/)?$"
    },
    {
      "page": "/deals",
      "regex": "^/deals(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/deals(?:/)?$"
    },
    {
      "page": "/Gallerypage",
      "regex": "^/Gallerypage(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/Gallerypage(?:/)?$"
    },
    {
      "page": "/privacy-policy",
      "regex": "^/privacy\\-policy(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/privacy\\-policy(?:/)?$"
    },
    {
      "page": "/refund-policy",
      "regex": "^/refund\\-policy(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/refund\\-policy(?:/)?$"
    },
    {
      "page": "/service",
      "regex": "^/service(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/service(?:/)?$"
    },
    {
      "page": "/servicedetails",
      "regex": "^/servicedetails(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/servicedetails(?:/)?$"
    },
    {
      "page": "/services/construction",
      "regex": "^/services/construction(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/services/construction(?:/)?$"
    },
    {
      "page": "/services/homeServices",
      "regex": "^/services/homeServices(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/services/homeServices(?:/)?$"
    },
    {
      "page": "/services/inspection",
      "regex": "^/services/inspection(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/services/inspection(?:/)?$"
    },
    {
      "page": "/services/packersAndMovers",
      "regex": "^/services/packersAndMovers(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/services/packersAndMovers(?:/)?$"
    },
    {
      "page": "/services/renovation",
      "regex": "^/services/renovation(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/services/renovation(?:/)?$"
    },
    {
      "page": "/terms-and-conditions",
      "regex": "^/terms\\-and\\-conditions(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/terms\\-and\\-conditions(?:/)?$"
    },
    {
      "page": "/user",
      "regex": "^/user(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user(?:/)?$"
    },
    {
      "page": "/user/editprofile",
      "regex": "^/user/editprofile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/editprofile(?:/)?$"
    },
    {
      "page": "/user/profile",
      "regex": "^/user/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/profile(?:/)?$"
    },
    {
      "page": "/user/purchasehistory",
      "regex": "^/user/purchasehistory(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/purchasehistory(?:/)?$"
    },
    {
      "page": "/user/settings",
      "regex": "^/user/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/settings(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}